// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
Unable to find .sln or .csproj file. Will use current directory /home/ksollner/projects/tristan to search for project file. If you don't use .sln file on purpose it should not be a problem.
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:ArtifactsPath="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/" /p:OutDir="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0/" /p:OutputPath="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0/" /p:PublishDir="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/publish/" in /home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1
// command took 1.82 sec and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:ArtifactsPath="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/" /p:OutDir="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0/" /p:OutputPath="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0/" /p:PublishDir="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/publish/" --output "/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0/" in /home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1
// command took 10.15 sec and exited with 0
// ***** Done, took 00:00:12 (12.08 sec)   *****
// Found 2 benchmarks:
//   DoubleGaussFitBenchmark.OurNelderMead_DoubleGaussFit_Specialized: DefaultJob
//   DoubleGaussFitBenchmark.MathNetNelderMead_DoubleGaussFit: DefaultJob

// **************************
// Benchmark: DoubleGaussFitBenchmark.OurNelderMead_DoubleGaussFit_Specialized: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet Optimization.Benchmarks-DefaultJob-1.dll --anonymousPipes 118 119 --benchmarkName Optimization.Benchmarks.DoubleGaussFitBenchmark.OurNelderMead_DoubleGaussFit_Specialized --job Default --benchmarkId 0 in /home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.15.0
// Runtime=.NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 238457.00 ns, 238.4570 us/op
WorkloadJitting  1: 1 op, 10568057.00 ns, 10.5681 ms/op

OverheadJitting  2: 16 op, 297030.00 ns, 18.5644 us/op
WorkloadJitting  2: 16 op, 28759120.00 ns, 1.7974 ms/op

WorkloadPilot    1: 16 op, 28689246.00 ns, 1.7931 ms/op
WorkloadPilot    2: 32 op, 56772730.00 ns, 1.7741 ms/op
WorkloadPilot    3: 64 op, 114954684.00 ns, 1.7962 ms/op
WorkloadPilot    4: 128 op, 151269460.00 ns, 1.1818 ms/op
WorkloadPilot    5: 256 op, 300356314.00 ns, 1.1733 ms/op
WorkloadPilot    6: 512 op, 603431245.00 ns, 1.1786 ms/op

OverheadWarmup   1: 512 op, 3607.00 ns, 7.0449 ns/op
OverheadWarmup   2: 512 op, 1764.00 ns, 3.4453 ns/op
OverheadWarmup   3: 512 op, 1744.00 ns, 3.4063 ns/op
OverheadWarmup   4: 512 op, 1703.00 ns, 3.3262 ns/op
OverheadWarmup   5: 512 op, 1764.00 ns, 3.4453 ns/op
OverheadWarmup   6: 512 op, 1693.00 ns, 3.3066 ns/op
OverheadWarmup   7: 512 op, 1764.00 ns, 3.4453 ns/op
OverheadWarmup   8: 512 op, 1753.00 ns, 3.4238 ns/op

OverheadActual   1: 512 op, 2014.00 ns, 3.9336 ns/op
OverheadActual   2: 512 op, 2154.00 ns, 4.2070 ns/op
OverheadActual   3: 512 op, 2485.00 ns, 4.8535 ns/op
OverheadActual   4: 512 op, 1824.00 ns, 3.5625 ns/op
OverheadActual   5: 512 op, 2185.00 ns, 4.2676 ns/op
OverheadActual   6: 512 op, 2024.00 ns, 3.9531 ns/op
OverheadActual   7: 512 op, 1894.00 ns, 3.6992 ns/op
OverheadActual   8: 512 op, 1754.00 ns, 3.4258 ns/op
OverheadActual   9: 512 op, 1934.00 ns, 3.7773 ns/op
OverheadActual  10: 512 op, 1834.00 ns, 3.5820 ns/op
OverheadActual  11: 512 op, 1984.00 ns, 3.8750 ns/op
OverheadActual  12: 512 op, 1963.00 ns, 3.8340 ns/op
OverheadActual  13: 512 op, 1934.00 ns, 3.7773 ns/op
OverheadActual  14: 512 op, 2494.00 ns, 4.8711 ns/op
OverheadActual  15: 512 op, 2425.00 ns, 4.7363 ns/op
OverheadActual  16: 512 op, 2696.00 ns, 5.2656 ns/op
OverheadActual  17: 512 op, 2375.00 ns, 4.6387 ns/op
OverheadActual  18: 512 op, 2795.00 ns, 5.4590 ns/op
OverheadActual  19: 512 op, 1804.00 ns, 3.5234 ns/op
OverheadActual  20: 512 op, 1854.00 ns, 3.6211 ns/op

OverheadWarmup   1: 512 op, 1934.00 ns, 3.7773 ns/op
OverheadWarmup   2: 512 op, 3026.00 ns, 5.9102 ns/op
OverheadWarmup   3: 512 op, 1783.00 ns, 3.4824 ns/op
OverheadWarmup   4: 512 op, 1954.00 ns, 3.8164 ns/op
OverheadWarmup   5: 512 op, 1823.00 ns, 3.5605 ns/op
OverheadWarmup   6: 512 op, 1794.00 ns, 3.5039 ns/op

// BeforeActualRun
WorkloadActual   1: 512 op, 611279033.00 ns, 1.1939 ms/op
WorkloadActual   2: 512 op, 614367480.00 ns, 1.1999 ms/op
WorkloadActual   3: 512 op, 608408918.00 ns, 1.1883 ms/op
WorkloadActual   4: 512 op, 593400652.00 ns, 1.1590 ms/op
WorkloadActual   5: 512 op, 595031393.00 ns, 1.1622 ms/op
WorkloadActual   6: 512 op, 593180692.00 ns, 1.1586 ms/op
WorkloadActual   7: 512 op, 609727322.00 ns, 1.1909 ms/op
WorkloadActual   8: 512 op, 615921316.00 ns, 1.2030 ms/op
WorkloadActual   9: 512 op, 619820760.00 ns, 1.2106 ms/op
WorkloadActual  10: 512 op, 615538504.00 ns, 1.2022 ms/op
WorkloadActual  11: 512 op, 615717498.00 ns, 1.2026 ms/op
WorkloadActual  12: 512 op, 608825485.00 ns, 1.1891 ms/op
WorkloadActual  13: 512 op, 599436531.00 ns, 1.1708 ms/op
WorkloadActual  14: 512 op, 594591766.00 ns, 1.1613 ms/op
WorkloadActual  15: 512 op, 595570224.00 ns, 1.1632 ms/op

// AfterActualRun
WorkloadResult   1: 512 op, 611277034.00 ns, 1.1939 ms/op
WorkloadResult   2: 512 op, 614365481.00 ns, 1.1999 ms/op
WorkloadResult   3: 512 op, 608406919.00 ns, 1.1883 ms/op
WorkloadResult   4: 512 op, 593398653.00 ns, 1.1590 ms/op
WorkloadResult   5: 512 op, 595029394.00 ns, 1.1622 ms/op
WorkloadResult   6: 512 op, 593178693.00 ns, 1.1586 ms/op
WorkloadResult   7: 512 op, 609725323.00 ns, 1.1909 ms/op
WorkloadResult   8: 512 op, 615919317.00 ns, 1.2030 ms/op
WorkloadResult   9: 512 op, 619818761.00 ns, 1.2106 ms/op
WorkloadResult  10: 512 op, 615536505.00 ns, 1.2022 ms/op
WorkloadResult  11: 512 op, 615715499.00 ns, 1.2026 ms/op
WorkloadResult  12: 512 op, 608823486.00 ns, 1.1891 ms/op
WorkloadResult  13: 512 op, 599434532.00 ns, 1.1708 ms/op
WorkloadResult  14: 512 op, 594589767.00 ns, 1.1613 ms/op
WorkloadResult  15: 512 op, 595568225.00 ns, 1.1632 ms/op
// GC:  0 0 0 430816 512
// Threading:  0 0 512

// AfterAll
// Benchmark Process 86611 has exited with code 0.

Mean = 1.184 ms, StdErr = 0.005 ms (0.41%), N = 15, StdDev = 0.019 ms
Min = 1.159 ms, Q1 = 1.163 ms, Median = 1.189 ms, Q3 = 1.201 ms, Max = 1.211 ms
IQR = 0.038 ms, LowerFence = 1.105 ms, UpperFence = 1.259 ms
ConfidenceInterval = [1.163 ms; 1.204 ms] (CI 99.9%), Margin = 0.020 ms (1.72% of Mean)
Skewness = -0.17, Kurtosis = 1.24, MValue = 2

// ** Remained 1 (50.0%) benchmark(s) to run. Estimated finish 2025-05-22 20:55 (0h 0m from now) **
// **************************
// Benchmark: DoubleGaussFitBenchmark.MathNetNelderMead_DoubleGaussFit: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet Optimization.Benchmarks-DefaultJob-1.dll --anonymousPipes 118 119 --benchmarkName Optimization.Benchmarks.DoubleGaussFitBenchmark.MathNetNelderMead_DoubleGaussFit --job Default --benchmarkId 1 in /home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.15.0
// Runtime=.NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 254268.00 ns, 254.2680 us/op
WorkloadJitting  1: 1 op, 14609491.00 ns, 14.6095 ms/op

OverheadJitting  2: 16 op, 755489.00 ns, 47.2181 us/op
WorkloadJitting  2: 16 op, 35139633.00 ns, 2.1962 ms/op

WorkloadPilot    1: 16 op, 34039182.00 ns, 2.1274 ms/op
WorkloadPilot    2: 32 op, 63567058.00 ns, 1.9865 ms/op
WorkloadPilot    3: 64 op, 128994956.00 ns, 2.0155 ms/op
WorkloadPilot    4: 128 op, 152449498.00 ns, 1.1910 ms/op
WorkloadPilot    5: 256 op, 288180680.00 ns, 1.1257 ms/op
WorkloadPilot    6: 512 op, 573637084.00 ns, 1.1204 ms/op

OverheadWarmup   1: 512 op, 5441.00 ns, 10.6270 ns/op
OverheadWarmup   2: 512 op, 2374.00 ns, 4.6367 ns/op
OverheadWarmup   3: 512 op, 2394.00 ns, 4.6758 ns/op
OverheadWarmup   4: 512 op, 2385.00 ns, 4.6582 ns/op
OverheadWarmup   5: 512 op, 2404.00 ns, 4.6953 ns/op
OverheadWarmup   6: 512 op, 2385.00 ns, 4.6582 ns/op

OverheadActual   1: 512 op, 2605.00 ns, 5.0879 ns/op
OverheadActual   2: 512 op, 2425.00 ns, 4.7363 ns/op
OverheadActual   3: 512 op, 2575.00 ns, 5.0293 ns/op
OverheadActual   4: 512 op, 2384.00 ns, 4.6563 ns/op
OverheadActual   5: 512 op, 2425.00 ns, 4.7363 ns/op
OverheadActual   6: 512 op, 2395.00 ns, 4.6777 ns/op
OverheadActual   7: 512 op, 2384.00 ns, 4.6563 ns/op
OverheadActual   8: 512 op, 2394.00 ns, 4.6758 ns/op
OverheadActual   9: 512 op, 2465.00 ns, 4.8145 ns/op
OverheadActual  10: 512 op, 2395.00 ns, 4.6777 ns/op
OverheadActual  11: 512 op, 2495.00 ns, 4.8730 ns/op
OverheadActual  12: 512 op, 2435.00 ns, 4.7559 ns/op
OverheadActual  13: 512 op, 2394.00 ns, 4.6758 ns/op
OverheadActual  14: 512 op, 2395.00 ns, 4.6777 ns/op
OverheadActual  15: 512 op, 2394.00 ns, 4.6758 ns/op

OverheadWarmup   1: 512 op, 2425.00 ns, 4.7363 ns/op
OverheadWarmup   2: 512 op, 2374.00 ns, 4.6367 ns/op
OverheadWarmup   3: 512 op, 2374.00 ns, 4.6367 ns/op
OverheadWarmup   4: 512 op, 2395.00 ns, 4.6777 ns/op
OverheadWarmup   5: 512 op, 2375.00 ns, 4.6387 ns/op
OverheadWarmup   6: 512 op, 2394.00 ns, 4.6758 ns/op

// BeforeActualRun
WorkloadActual   1: 512 op, 568396248.00 ns, 1.1101 ms/op
WorkloadActual   2: 512 op, 562532698.00 ns, 1.0987 ms/op
WorkloadActual   3: 512 op, 564062935.00 ns, 1.1017 ms/op
WorkloadActual   4: 512 op, 563132240.00 ns, 1.0999 ms/op
WorkloadActual   5: 512 op, 561328259.00 ns, 1.0963 ms/op
WorkloadActual   6: 512 op, 563359457.00 ns, 1.1003 ms/op
WorkloadActual   7: 512 op, 590302676.00 ns, 1.1529 ms/op
WorkloadActual   8: 512 op, 577967088.00 ns, 1.1288 ms/op
WorkloadActual   9: 512 op, 581735118.00 ns, 1.1362 ms/op
WorkloadActual  10: 512 op, 593229975.00 ns, 1.1587 ms/op
WorkloadActual  11: 512 op, 574418941.00 ns, 1.1219 ms/op
WorkloadActual  12: 512 op, 566411318.00 ns, 1.1063 ms/op
WorkloadActual  13: 512 op, 560131299.00 ns, 1.0940 ms/op
WorkloadActual  14: 512 op, 573403165.00 ns, 1.1199 ms/op
WorkloadActual  15: 512 op, 563226088.00 ns, 1.1001 ms/op

// AfterActualRun
WorkloadResult   1: 512 op, 568393853.00 ns, 1.1101 ms/op
WorkloadResult   2: 512 op, 562530303.00 ns, 1.0987 ms/op
WorkloadResult   3: 512 op, 564060540.00 ns, 1.1017 ms/op
WorkloadResult   4: 512 op, 563129845.00 ns, 1.0999 ms/op
WorkloadResult   5: 512 op, 561325864.00 ns, 1.0963 ms/op
WorkloadResult   6: 512 op, 563357062.00 ns, 1.1003 ms/op
WorkloadResult   7: 512 op, 590300281.00 ns, 1.1529 ms/op
WorkloadResult   8: 512 op, 577964693.00 ns, 1.1288 ms/op
WorkloadResult   9: 512 op, 581732723.00 ns, 1.1362 ms/op
WorkloadResult  10: 512 op, 593227580.00 ns, 1.1586 ms/op
WorkloadResult  11: 512 op, 574416546.00 ns, 1.1219 ms/op
WorkloadResult  12: 512 op, 566408923.00 ns, 1.1063 ms/op
WorkloadResult  13: 512 op, 560128904.00 ns, 1.0940 ms/op
WorkloadResult  14: 512 op, 573400770.00 ns, 1.1199 ms/op
WorkloadResult  15: 512 op, 563223693.00 ns, 1.1000 ms/op
// GC:  80 0 0 335278816 512
// Threading:  0 0 512

// AfterAll
// Benchmark Process 86797 has exited with code 0.

Mean = 1.115 ms, StdErr = 0.005 ms (0.48%), N = 15, StdDev = 0.021 ms
Min = 1.094 ms, Q1 = 1.100 ms, Median = 1.106 ms, Q3 = 1.125 ms, Max = 1.159 ms
IQR = 0.025 ms, LowerFence = 1.062 ms, UpperFence = 1.163 ms
ConfidenceInterval = [1.093 ms; 1.137 ms] (CI 99.9%), Margin = 0.022 ms (1.99% of Mean)
Skewness = 0.86, Kurtosis = 2.31, MValue = 2

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2025-05-22 20:55 (0h 0m from now) **
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts/results/Optimization.Benchmarks.DoubleGaussFitBenchmark-report.csv
  BenchmarkDotNet.Artifacts/results/Optimization.Benchmarks.DoubleGaussFitBenchmark-report-github.md
  BenchmarkDotNet.Artifacts/results/Optimization.Benchmarks.DoubleGaussFitBenchmark-report.html

// * Detailed results *
DoubleGaussFitBenchmark.OurNelderMead_DoubleGaussFit_Specialized: DefaultJob
Runtime = .NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 1.184 ms, StdErr = 0.005 ms (0.41%), N = 15, StdDev = 0.019 ms
Min = 1.159 ms, Q1 = 1.163 ms, Median = 1.189 ms, Q3 = 1.201 ms, Max = 1.211 ms
IQR = 0.038 ms, LowerFence = 1.105 ms, UpperFence = 1.259 ms
ConfidenceInterval = [1.163 ms; 1.204 ms] (CI 99.9%), Margin = 0.020 ms (1.72% of Mean)
Skewness = -0.17, Kurtosis = 1.24, MValue = 2
-------------------- Histogram --------------------
[1.153 ms ; 1.184 ms) | @@@@@@
[1.184 ms ; 1.221 ms) | @@@@@@@@@
---------------------------------------------------

DoubleGaussFitBenchmark.MathNetNelderMead_DoubleGaussFit: DefaultJob
Runtime = .NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 1.115 ms, StdErr = 0.005 ms (0.48%), N = 15, StdDev = 0.021 ms
Min = 1.094 ms, Q1 = 1.100 ms, Median = 1.106 ms, Q3 = 1.125 ms, Max = 1.159 ms
IQR = 0.025 ms, LowerFence = 1.062 ms, UpperFence = 1.163 ms
ConfidenceInterval = [1.093 ms; 1.137 ms] (CI 99.9%), Margin = 0.022 ms (1.99% of Mean)
Skewness = 0.86, Kurtosis = 2.31, MValue = 2
-------------------- Histogram --------------------
[1.091 ms ; 1.117 ms) | @@@@@@@@@
[1.117 ms ; 1.144 ms) | @@@@
[1.144 ms ; 1.170 ms) | @@
---------------------------------------------------

// * Summary *

BenchmarkDotNet v0.15.0, Linux Manjaro Linux
AMD Ryzen Threadripper 1950X 3.40GHz, 1 CPU, 32 logical and 16 physical cores
.NET SDK 9.0.105
  [Host]     : .NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2
  DefaultJob : .NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2


| Method                                   | Mean     | Error     | StdDev    | Ratio | RatioSD | Gen0     | Allocated | Alloc Ratio |
|----------------------------------------- |---------:|----------:|----------:|------:|--------:|---------:|----------:|------------:|
| OurNelderMead_DoubleGaussFit_Specialized | 1.184 ms | 0.0203 ms | 0.0190 ms |  1.00 |    0.02 |        - |     841 B |        1.00 |
| MathNetNelderMead_DoubleGaussFit         | 1.115 ms | 0.0222 ms | 0.0208 ms |  0.94 |    0.02 | 156.2500 |  654841 B |      778.65 |

// * Legends *
  Mean        : Arithmetic mean of all measurements
  Error       : Half of 99.9% confidence interval
  StdDev      : Standard deviation of all measurements
  Ratio       : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD     : Standard deviation of the ratio distribution ([Current]/[Baseline])
  Gen0        : GC Generation 0 collects per 1000 operations
  Allocated   : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  Alloc Ratio : Allocated memory ratio distribution ([Current]/[Baseline])
  1 ms        : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:22 (22.12 sec), executed benchmarks: 2

Global total time: 00:00:34 (34.88 sec), executed benchmarks: 2
// * Artifacts cleanup *
Artifacts cleanup is finished
