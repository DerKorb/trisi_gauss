// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
Unable to find .sln or .csproj file. Will use current directory /home/ksollner/projects/tristan to search for project file. If you don't use .sln file on purpose it should not be a problem.
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:ArtifactsPath="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/" /p:OutDir="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0/" /p:OutputPath="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0/" /p:PublishDir="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/publish/" in /home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1
// command took 2.53 sec and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:ArtifactsPath="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/" /p:OutDir="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0/" /p:OutputPath="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0/" /p:PublishDir="/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/publish/" --output "/home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0/" in /home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1
// command took 10.37 sec and exited with 0
// ***** Done, took 00:00:13 (13.01 sec)   *****
// Found 2 benchmarks:
//   DoubleGaussFitBenchmark.OurNelderMead_DoubleGaussFit_Specialized: DefaultJob
//   DoubleGaussFitBenchmark.MathNetNelderMead_DoubleGaussFit: DefaultJob

// **************************
// Benchmark: DoubleGaussFitBenchmark.OurNelderMead_DoubleGaussFit_Specialized: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet Optimization.Benchmarks-DefaultJob-1.dll --anonymousPipes 118 119 --benchmarkName Optimization.Benchmarks.DoubleGaussFitBenchmark.OurNelderMead_DoubleGaussFit_Specialized --job Default --benchmarkId 0 in /home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.15.0
// Runtime=.NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 234781.00 ns, 234.7810 us/op
WorkloadJitting  1: 1 op, 20873184.00 ns, 20.8732 ms/op

OverheadJitting  2: 16 op, 348239.00 ns, 21.7649 us/op
WorkloadJitting  2: 16 op, 124938899.00 ns, 7.8087 ms/op

WorkloadPilot    1: 16 op, 149959782.00 ns, 9.3725 ms/op
WorkloadPilot    2: 32 op, 228788077.00 ns, 7.1496 ms/op
WorkloadPilot    3: 64 op, 328474105.00 ns, 5.1324 ms/op
WorkloadPilot    4: 128 op, 642749099.00 ns, 5.0215 ms/op

OverheadWarmup   1: 128 op, 3517.00 ns, 27.4766 ns/op
OverheadWarmup   2: 128 op, 851.00 ns, 6.6484 ns/op
OverheadWarmup   3: 128 op, 902.00 ns, 7.0469 ns/op
OverheadWarmup   4: 128 op, 882.00 ns, 6.8906 ns/op
OverheadWarmup   5: 128 op, 891.00 ns, 6.9609 ns/op
OverheadWarmup   6: 128 op, 882.00 ns, 6.8906 ns/op

OverheadActual   1: 128 op, 1333.00 ns, 10.4141 ns/op
OverheadActual   2: 128 op, 1443.00 ns, 11.2734 ns/op
OverheadActual   3: 128 op, 1353.00 ns, 10.5703 ns/op
OverheadActual   4: 128 op, 851.00 ns, 6.6484 ns/op
OverheadActual   5: 128 op, 1032.00 ns, 8.0625 ns/op
OverheadActual   6: 128 op, 912.00 ns, 7.1250 ns/op
OverheadActual   7: 128 op, 931.00 ns, 7.2734 ns/op
OverheadActual   8: 128 op, 1002.00 ns, 7.8281 ns/op
OverheadActual   9: 128 op, 962.00 ns, 7.5156 ns/op
OverheadActual  10: 128 op, 911.00 ns, 7.1172 ns/op
OverheadActual  11: 128 op, 882.00 ns, 6.8906 ns/op
OverheadActual  12: 128 op, 901.00 ns, 7.0391 ns/op
OverheadActual  13: 128 op, 922.00 ns, 7.2031 ns/op
OverheadActual  14: 128 op, 832.00 ns, 6.5000 ns/op
OverheadActual  15: 128 op, 901.00 ns, 7.0391 ns/op
OverheadActual  16: 128 op, 961.00 ns, 7.5078 ns/op
OverheadActual  17: 128 op, 912.00 ns, 7.1250 ns/op
OverheadActual  18: 128 op, 1502.00 ns, 11.7344 ns/op
OverheadActual  19: 128 op, 932.00 ns, 7.2813 ns/op
OverheadActual  20: 128 op, 912.00 ns, 7.1250 ns/op

OverheadWarmup   1: 128 op, 1252.00 ns, 9.7813 ns/op
OverheadWarmup   2: 128 op, 1233.00 ns, 9.6328 ns/op
OverheadWarmup   3: 128 op, 992.00 ns, 7.7500 ns/op
OverheadWarmup   4: 128 op, 2414.00 ns, 18.8594 ns/op
OverheadWarmup   5: 128 op, 1012.00 ns, 7.9063 ns/op
OverheadWarmup   6: 128 op, 692.00 ns, 5.4063 ns/op
OverheadWarmup   7: 128 op, 692.00 ns, 5.4063 ns/op
OverheadWarmup   8: 128 op, 691.00 ns, 5.3984 ns/op

// BeforeActualRun
WorkloadActual   1: 128 op, 711102677.00 ns, 5.5555 ms/op
WorkloadActual   2: 128 op, 663786405.00 ns, 5.1858 ms/op
WorkloadActual   3: 128 op, 658809453.00 ns, 5.1469 ms/op
WorkloadActual   4: 128 op, 640241186.00 ns, 5.0019 ms/op
WorkloadActual   5: 128 op, 640672473.00 ns, 5.0053 ms/op
WorkloadActual   6: 128 op, 662093780.00 ns, 5.1726 ms/op
WorkloadActual   7: 128 op, 647605963.00 ns, 5.0594 ms/op
WorkloadActual   8: 128 op, 646290014.00 ns, 5.0491 ms/op
WorkloadActual   9: 128 op, 652383140.00 ns, 5.0967 ms/op
WorkloadActual  10: 128 op, 638780404.00 ns, 4.9905 ms/op
WorkloadActual  11: 128 op, 640840521.00 ns, 5.0066 ms/op
WorkloadActual  12: 128 op, 646912727.00 ns, 5.0540 ms/op
WorkloadActual  13: 128 op, 643212868.00 ns, 5.0251 ms/op
WorkloadActual  14: 128 op, 646825377.00 ns, 5.0533 ms/op
WorkloadActual  15: 128 op, 643881981.00 ns, 5.0303 ms/op

// AfterActualRun
WorkloadResult   1: 128 op, 663785478.50 ns, 5.1858 ms/op
WorkloadResult   2: 128 op, 658808526.50 ns, 5.1469 ms/op
WorkloadResult   3: 128 op, 640240259.50 ns, 5.0019 ms/op
WorkloadResult   4: 128 op, 640671546.50 ns, 5.0052 ms/op
WorkloadResult   5: 128 op, 662092853.50 ns, 5.1726 ms/op
WorkloadResult   6: 128 op, 647605036.50 ns, 5.0594 ms/op
WorkloadResult   7: 128 op, 646289087.50 ns, 5.0491 ms/op
WorkloadResult   8: 128 op, 652382213.50 ns, 5.0967 ms/op
WorkloadResult   9: 128 op, 638779477.50 ns, 4.9905 ms/op
WorkloadResult  10: 128 op, 640839594.50 ns, 5.0066 ms/op
WorkloadResult  11: 128 op, 646911800.50 ns, 5.0540 ms/op
WorkloadResult  12: 128 op, 643211941.50 ns, 5.0251 ms/op
WorkloadResult  13: 128 op, 646824450.50 ns, 5.0533 ms/op
WorkloadResult  14: 128 op, 643881054.50 ns, 5.0303 ms/op
// GC:  4 0 0 19274464 128
// Threading:  0 0 128

// AfterAll
// Benchmark Process 77574 has exited with code 0.

Mean = 5.063 ms, StdErr = 0.017 ms (0.34%), N = 14, StdDev = 0.064 ms
Min = 4.990 ms, Q1 = 5.011 ms, Median = 5.051 ms, Q3 = 5.087 ms, Max = 5.186 ms
IQR = 0.076 ms, LowerFence = 4.897 ms, UpperFence = 5.202 ms
ConfidenceInterval = [4.990 ms; 5.135 ms] (CI 99.9%), Margin = 0.072 ms (1.43% of Mean)
Skewness = 0.75, Kurtosis = 2.06, MValue = 2

// ** Remained 1 (50.0%) benchmark(s) to run. Estimated finish 2025-05-22 20:46 (0h 0m from now) **
// **************************
// Benchmark: DoubleGaussFitBenchmark.MathNetNelderMead_DoubleGaussFit: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet Optimization.Benchmarks-DefaultJob-1.dll --anonymousPipes 118 119 --benchmarkName Optimization.Benchmarks.DoubleGaussFitBenchmark.MathNetNelderMead_DoubleGaussFit --job Default --benchmarkId 1 in /home/ksollner/projects/tristan/Optimization.Benchmarks/bin/Release/net9.0/Optimization.Benchmarks-DefaultJob-1/bin/Release/net9.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.15.0
// Runtime=.NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 257475.00 ns, 257.4750 us/op
WorkloadJitting  1: 1 op, 14679233.00 ns, 14.6792 ms/op

OverheadJitting  2: 16 op, 734050.00 ns, 45.8781 us/op
WorkloadJitting  2: 16 op, 34467693.00 ns, 2.1542 ms/op

WorkloadPilot    1: 16 op, 33728121.00 ns, 2.1080 ms/op
WorkloadPilot    2: 32 op, 63212250.00 ns, 1.9754 ms/op
WorkloadPilot    3: 64 op, 128238564.00 ns, 2.0037 ms/op
WorkloadPilot    4: 128 op, 153372996.00 ns, 1.1982 ms/op
WorkloadPilot    5: 256 op, 286170037.00 ns, 1.1179 ms/op
WorkloadPilot    6: 512 op, 572927843.00 ns, 1.1190 ms/op

OverheadWarmup   1: 512 op, 4298.00 ns, 8.3945 ns/op
OverheadWarmup   2: 512 op, 2424.00 ns, 4.7344 ns/op
OverheadWarmup   3: 512 op, 2424.00 ns, 4.7344 ns/op
OverheadWarmup   4: 512 op, 2445.00 ns, 4.7754 ns/op
OverheadWarmup   5: 512 op, 2425.00 ns, 4.7363 ns/op
OverheadWarmup   6: 512 op, 2424.00 ns, 4.7344 ns/op
OverheadWarmup   7: 512 op, 2425.00 ns, 4.7363 ns/op

OverheadActual   1: 512 op, 2855.00 ns, 5.5762 ns/op
OverheadActual   2: 512 op, 2956.00 ns, 5.7734 ns/op
OverheadActual   3: 512 op, 2945.00 ns, 5.7520 ns/op
OverheadActual   4: 512 op, 2475.00 ns, 4.8340 ns/op
OverheadActual   5: 512 op, 2415.00 ns, 4.7168 ns/op
OverheadActual   6: 512 op, 2425.00 ns, 4.7363 ns/op
OverheadActual   7: 512 op, 2414.00 ns, 4.7148 ns/op
OverheadActual   8: 512 op, 2424.00 ns, 4.7344 ns/op
OverheadActual   9: 512 op, 2455.00 ns, 4.7949 ns/op
OverheadActual  10: 512 op, 2445.00 ns, 4.7754 ns/op
OverheadActual  11: 512 op, 2395.00 ns, 4.6777 ns/op
OverheadActual  12: 512 op, 2364.00 ns, 4.6172 ns/op
OverheadActual  13: 512 op, 2384.00 ns, 4.6563 ns/op
OverheadActual  14: 512 op, 2404.00 ns, 4.6953 ns/op
OverheadActual  15: 512 op, 2404.00 ns, 4.6953 ns/op

OverheadWarmup   1: 512 op, 2535.00 ns, 4.9512 ns/op
OverheadWarmup   2: 512 op, 2435.00 ns, 4.7559 ns/op
OverheadWarmup   3: 512 op, 2385.00 ns, 4.6582 ns/op
OverheadWarmup   4: 512 op, 2615.00 ns, 5.1074 ns/op
OverheadWarmup   5: 512 op, 2484.00 ns, 4.8516 ns/op
OverheadWarmup   6: 512 op, 2395.00 ns, 4.6777 ns/op
OverheadWarmup   7: 512 op, 2395.00 ns, 4.6777 ns/op
OverheadWarmup   8: 512 op, 2395.00 ns, 4.6777 ns/op

// BeforeActualRun
WorkloadActual   1: 512 op, 569594669.00 ns, 1.1125 ms/op
WorkloadActual   2: 512 op, 564732717.00 ns, 1.1030 ms/op
WorkloadActual   3: 512 op, 560779721.00 ns, 1.0953 ms/op
WorkloadActual   4: 512 op, 557693311.00 ns, 1.0892 ms/op
WorkloadActual   5: 512 op, 558374779.00 ns, 1.0906 ms/op
WorkloadActual   6: 512 op, 562443215.00 ns, 1.0985 ms/op
WorkloadActual   7: 512 op, 570033307.00 ns, 1.1133 ms/op
WorkloadActual   8: 512 op, 599114730.00 ns, 1.1701 ms/op
WorkloadActual   9: 512 op, 579538588.00 ns, 1.1319 ms/op
WorkloadActual  10: 512 op, 578404318.00 ns, 1.1297 ms/op
WorkloadActual  11: 512 op, 576715032.00 ns, 1.1264 ms/op
WorkloadActual  12: 512 op, 561799714.00 ns, 1.0973 ms/op
WorkloadActual  13: 512 op, 559415323.00 ns, 1.0926 ms/op
WorkloadActual  14: 512 op, 556159035.00 ns, 1.0862 ms/op
WorkloadActual  15: 512 op, 564797342.00 ns, 1.1031 ms/op

// AfterActualRun
WorkloadResult   1: 512 op, 569592245.00 ns, 1.1125 ms/op
WorkloadResult   2: 512 op, 564730293.00 ns, 1.1030 ms/op
WorkloadResult   3: 512 op, 560777297.00 ns, 1.0953 ms/op
WorkloadResult   4: 512 op, 557690887.00 ns, 1.0892 ms/op
WorkloadResult   5: 512 op, 558372355.00 ns, 1.0906 ms/op
WorkloadResult   6: 512 op, 562440791.00 ns, 1.0985 ms/op
WorkloadResult   7: 512 op, 570030883.00 ns, 1.1133 ms/op
WorkloadResult   8: 512 op, 579536164.00 ns, 1.1319 ms/op
WorkloadResult   9: 512 op, 578401894.00 ns, 1.1297 ms/op
WorkloadResult  10: 512 op, 576712608.00 ns, 1.1264 ms/op
WorkloadResult  11: 512 op, 561797290.00 ns, 1.0973 ms/op
WorkloadResult  12: 512 op, 559412899.00 ns, 1.0926 ms/op
WorkloadResult  13: 512 op, 556156611.00 ns, 1.0862 ms/op
WorkloadResult  14: 512 op, 564794918.00 ns, 1.1031 ms/op
// GC:  80 0 0 335278816 512
// Threading:  0 0 512

// AfterAll
// Benchmark Process 77775 has exited with code 0.

Mean = 1.105 ms, StdErr = 0.004 ms (0.37%), N = 14, StdDev = 0.015 ms
Min = 1.086 ms, Q1 = 1.093 ms, Median = 1.101 ms, Q3 = 1.113 ms, Max = 1.132 ms
IQR = 0.020 ms, LowerFence = 1.063 ms, UpperFence = 1.143 ms
ConfidenceInterval = [1.088 ms; 1.122 ms] (CI 99.9%), Margin = 0.017 ms (1.57% of Mean)
Skewness = 0.56, Kurtosis = 1.76, MValue = 2

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2025-05-22 20:46 (0h 0m from now) **
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts/results/Optimization.Benchmarks.DoubleGaussFitBenchmark-report.csv
  BenchmarkDotNet.Artifacts/results/Optimization.Benchmarks.DoubleGaussFitBenchmark-report-github.md
  BenchmarkDotNet.Artifacts/results/Optimization.Benchmarks.DoubleGaussFitBenchmark-report.html

// * Detailed results *
DoubleGaussFitBenchmark.OurNelderMead_DoubleGaussFit_Specialized: DefaultJob
Runtime = .NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 5.063 ms, StdErr = 0.017 ms (0.34%), N = 14, StdDev = 0.064 ms
Min = 4.990 ms, Q1 = 5.011 ms, Median = 5.051 ms, Q3 = 5.087 ms, Max = 5.186 ms
IQR = 0.076 ms, LowerFence = 4.897 ms, UpperFence = 5.202 ms
ConfidenceInterval = [4.990 ms; 5.135 ms] (CI 99.9%), Margin = 0.072 ms (1.43% of Mean)
Skewness = 0.75, Kurtosis = 2.06, MValue = 2
-------------------- Histogram --------------------
[4.975 ms ; 5.115 ms) | @@@@@@@@@@@
[5.115 ms ; 5.221 ms) | @@@
---------------------------------------------------

DoubleGaussFitBenchmark.MathNetNelderMead_DoubleGaussFit: DefaultJob
Runtime = .NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 1.105 ms, StdErr = 0.004 ms (0.37%), N = 14, StdDev = 0.015 ms
Min = 1.086 ms, Q1 = 1.093 ms, Median = 1.101 ms, Q3 = 1.113 ms, Max = 1.132 ms
IQR = 0.020 ms, LowerFence = 1.063 ms, UpperFence = 1.143 ms
ConfidenceInterval = [1.088 ms; 1.122 ms] (CI 99.9%), Margin = 0.017 ms (1.57% of Mean)
Skewness = 0.56, Kurtosis = 1.76, MValue = 2
-------------------- Histogram --------------------
[1.085 ms ; 1.140 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet v0.15.0, Linux Manjaro Linux
AMD Ryzen Threadripper 1950X 3.40GHz, 1 CPU, 32 logical and 16 physical cores
.NET SDK 9.0.105
  [Host]     : .NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2
  DefaultJob : .NET 9.0.4 (9.0.425.16305), X64 RyuJIT AVX2


| Method                                   | Mean     | Error     | StdDev    | Ratio | RatioSD | Gen0     | Allocated | Alloc Ratio |
|----------------------------------------- |---------:|----------:|----------:|------:|--------:|---------:|----------:|------------:|
| OurNelderMead_DoubleGaussFit_Specialized | 5.063 ms | 0.0725 ms | 0.0643 ms |  1.00 |    0.02 |  31.2500 | 147.05 KB |        1.00 |
| MathNetNelderMead_DoubleGaussFit         | 1.105 ms | 0.0174 ms | 0.0154 ms |  0.22 |    0.00 | 156.2500 | 639.49 KB |        4.35 |

// * Hints *
Outliers
  DoubleGaussFitBenchmark.OurNelderMead_DoubleGaussFit_Specialized: Default -> 1 outlier  was  removed (5.56 ms)
  DoubleGaussFitBenchmark.MathNetNelderMead_DoubleGaussFit: Default         -> 1 outlier  was  removed (1.17 ms)

// * Legends *
  Mean        : Arithmetic mean of all measurements
  Error       : Half of 99.9% confidence interval
  StdDev      : Standard deviation of all measurements
  Ratio       : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD     : Standard deviation of the ratio distribution ([Current]/[Baseline])
  Gen0        : GC Generation 0 collects per 1000 operations
  Allocated   : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  Alloc Ratio : Allocated memory ratio distribution ([Current]/[Baseline])
  1 ms        : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:23 (23.02 sec), executed benchmarks: 2

Global total time: 00:00:36 (36.71 sec), executed benchmarks: 2
// * Artifacts cleanup *
Artifacts cleanup is finished
